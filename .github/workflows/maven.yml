# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
env:
  DEMO_TAG: $(git rev-parse --short HEAD) 
  PG_TAG: v0.1

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
    - name: Build the Docker image
      run: |
        cd otel-demo-consumer
        docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_ACCOUNT }}/otel-demo-consumer:${{ env.DEMO_TAG }} 
        cd ../otel-demo-provider 
        docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_ACCOUNT }}/otel-demo-provider:${{ env.DEMO_TAG }}
        cd pg
        docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_ACCOUNT }}/demo-postgres:${{ env.PG_TAG }}
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
      uses: docker/login-action@v2.0.0
      with:
        # Username used to log against the Docker registry
        username: ${{ secrets.DOCKERHUB_ACCOUNT }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_ACCOUNT }}/otel-demo-consumer:${{ env.DEMO_TAG }}
        docker push ${{ secrets.DOCKERHUB_ACCOUNT }}/otel-demo-provider:${{ env.DEMO_TAG }}
        docker push ${{ secrets.DOCKERHUB_ACCOUNT }}/demo-postgres:${{ env.PG_TAG }}
